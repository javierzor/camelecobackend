{"version":3,"sources":["./src/app/fraccionamiento/fraccionamiento-routing.module.ts","./src/app/fraccionamiento/fraccionamiento.module.ts","./src/app/fraccionamiento/fraccionamiento.page.ts","./src/app/fraccionamiento/fraccionamiento.page.scss","./src/app/fraccionamiento/fraccionamiento.page.html"],"names":[],"mappings":"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","file":"src_app_fraccionamiento_fraccionamiento_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FraccionamientoPage } from './fraccionamiento.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FraccionamientoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FraccionamientoPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FraccionamientoPageRoutingModule } from './fraccionamiento-routing.module';\r\n\r\nimport { FraccionamientoPage } from './fraccionamiento.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    FraccionamientoPageRoutingModule\r\n  ],\r\n  declarations: [FraccionamientoPage]\r\n})\r\nexport class FraccionamientoPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { JsonService } from '../json.service';\r\nimport { Router } from '@angular/router';\r\nimport { Platform, NavController,LoadingController, AlertController } from '@ionic/angular';\r\nimport { environment } from '../../environments/environment';\r\nimport { MenuController } from '@ionic/angular';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DatePipe } from '@angular/common'\r\nimport { Location } from \"@angular/common\";\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppComponent } from '../app.component';\r\nimport { GlobalpermisosService } from '../globalpermisos.service';\r\nimport { ModalfraccionamientoqrPage } from '../modalfraccionamientoqr/modalfraccionamientoqr.page';\r\n\r\n@Component({\r\n  selector: 'app-fraccionamiento',\r\n  templateUrl: './fraccionamiento.page.html',\r\n  styleUrls: ['./fraccionamiento.page.scss'],\r\n})\r\nexport class FraccionamientoPage implements OnInit {\r\n  permisosconsultadosencomponenteprincipalYService: any;\r\n  puedenavegaraqui:any;\r\n  seccionactiva: string;\r\n  usuariologeado: any;\r\n  respuestaobtenerordenesdefraccionamientopendientesynobloqueados: any;\r\n  respuestafraccionarordenfraccionamiento: any;\r\n  nuevafecha: Date;\r\n  user_nombre: any;\r\n  user_id: any;\r\n  ordencreadaporeloperario: any;\r\n  codigoingresadoporusuarioparaverificarqueseaelcarrete: string | number | string[];\r\n  constructor(\r\n    private alertController: AlertController,\r\n    private location: Location,\r\n    private router: Router,\r\n    private json: JsonService,\r\n    public loadingController: LoadingController,\r\n    public navCtrl: NavController,\r\n    public loading: LoadingController,\r\n    private route: ActivatedRoute,\r\n    public modalController: ModalController,\r\n    public datepipe: DatePipe,\r\n    public menuCtrl: MenuController,\r\n    public myapp: AppComponent,\r\n    public globalpermisos: GlobalpermisosService,\r\n  )\r\n\r\n{      \r\n  var dataobtenerordenesdefraccionamientopendientesynobloqueados = {\r\n    nombre_solicitud:'obtenerordenesdefraccionamientopendientesynobloqueados',\r\n    }\r\n    this.json.variasfunciones(dataobtenerordenesdefraccionamientopendientesynobloqueados).subscribe(async (res: any ) =>{\r\n      console.log('respuesta a la solicitud variasfunciones,  obtenerordenesdefraccionamientopendientesynobloqueados', res);\r\n      this.respuestaobtenerordenesdefraccionamientopendientesynobloqueados=res;\r\n\r\n    });\r\n}\r\n\r\nasync actualizarlista(){\r\n  const actualizando = await this.loadingController.create({\r\n    message: 'Actualizando...',spinner: 'bubbles',duration: 10000,\r\n    });\r\n    actualizando.present();\r\n  var dataobtenerordenesdefraccionamientopendientesynobloqueados = {\r\n    nombre_solicitud:'obtenerordenesdefraccionamientopendientesynobloqueados',\r\n    }\r\n    this.json.variasfunciones(dataobtenerordenesdefraccionamientopendientesynobloqueados).subscribe(async (res: any ) =>{\r\n      console.log('respuesta a la solicitud variasfunciones,  obtenerordenesdefraccionamientopendientesynobloqueados', res);\r\n      this.respuestaobtenerordenesdefraccionamientopendientesynobloqueados=res;\r\n      if(res){\r\n        actualizando.dismiss();\r\n      }\r\n      \r\n    }); \r\n}\r\n\r\n\r\nionViewDidEnter(){\r\n  this.usuariologeado=this.globalpermisos.usuariologeado;\r\n  if(this.usuariologeado==undefined||this.usuariologeado==null){\r\n    this.seccionactiva='no';\r\n  }\r\n  this.globalpermisos.mispermisosglobalesenservice;\r\n  console.log('en la vista lo que tengo',this.permisosconsultadosencomponenteprincipalYService);\r\n  if(this.globalpermisos.mispermisosglobalesenservice){\r\n  if(this.globalpermisos.mispermisosglobalesenservice['permisonumero6']=='si')\r\n  {\r\n    this.puedenavegaraqui='si';\r\n    console.log('this.puedenavegaraqui:',this.puedenavegaraqui);\r\n  }\r\n  else if(this.globalpermisos.mispermisosglobalesenservice['permisonumero6']!='si'){\r\n    this.puedenavegaraqui='no';\r\n    console.log('this.puedenavegaraqui:',this.puedenavegaraqui);\r\n  }\r\n}\r\n}\r\n\r\nreingresar(){\r\n  this.router.navigate(['/login']);\r\n  //vaciando variables usadas en esta vista\r\n  this.seccionactiva='';\r\n  this.puedenavegaraqui='';\r\n}\r\n\r\n\r\n async ngOnInit() {\r\n}\r\n\r\nverificarsielcodigoescaneadoeselseleccionado(ordenafraccionar){\r\n\r\n}\r\n\r\n\r\nasync ordenar(ordenafraccionar){\r\n  this.nuevafecha = new Date ();\r\n  let fecha_fraccionado =this.datepipe.transform(this.nuevafecha, 'yyyy-MM-dd');\r\n  let hora_fraccionado =this.datepipe.transform(this.nuevafecha, 'hh:mm');\r\n\r\n  this.user_nombre=this.globalpermisos.nombre;\r\n  this.user_id=this.globalpermisos.id_usuario;\r\n\r\n    var datafraccionarordenfraccionamiento = {\r\n      nombre_solicitud:'tomarordenfraccionamiento',\r\n      id_inutilizado:ordenafraccionar.id_inutilizado,\r\n      nombre_ordenador:this.user_nombre,\r\n      fecha_fraccionado:fecha_fraccionado,\r\n      hora_fraccionado:hora_fraccionado,\r\n      estado:'En alistamiento'\r\n      }\r\n      this.json.variasfunciones(datafraccionarordenfraccionamiento).subscribe(async (res: any ) =>{\r\n        console.log('respuesta a la solicitud variasfunciones,  fraccionarordenfraccionamiento', res);\r\n        this.respuestafraccionarordenfraccionamiento=res;\r\n        if(this.respuestafraccionarordenfraccionamiento>0) {\r\n          var dataobtenerfraccionamientodespuesdefraccionar = {\r\n            nombre_solicitud:'obtenerfraccionamientodespuesdefraccionar',\r\n            id_inutilizado:ordenafraccionar.id_inutilizado,\r\n            }\r\n            this.json.variasfunciones(dataobtenerfraccionamientodespuesdefraccionar).subscribe(async (res: any ) =>{\r\n              this.ordencreadaporeloperario=res[0];\r\n\r\n                //empieza el modal\r\n                const modal = await this.modalController.create({\r\n                  component: ModalfraccionamientoqrPage,\r\n                  componentProps: {\r\n                    cssClass: 'my-custom-class',\r\n                    'dataparaelmodal': this.ordencreadaporeloperario,\r\n                  }\r\n                });\r\n                \r\n                modal.onDidDismiss().then((data) => {\r\n                  this.actualizarlista();\r\n                });\r\n                console.log('enviando estos datos al modal qr',this.ordencreadaporeloperario);\r\n                return await modal.present();\r\n                //termina el modal\r\n\r\n\r\n            });   //cierre reconsultar fraccionamiento que se guardo con un operario.\r\n\r\n          }  //cierre condicional if\r\n\r\n        }); //cierre envio fraccionamiento\r\n\r\n}\r\n\r\n\r\n\r\nasync presentAlertPrompt(ordenafraccionar) {\r\n  const alert = await this.alertController.create({\r\n    cssClass: 'my-custom-class',\r\n    header: 'Verifique La Información:',\r\n    message: 'Orden Frac. Nro: '+ordenafraccionar.numero_fraccionado+'<br/> Factura:'+ordenafraccionar.numerodenotadeentrada+'  <br/> Nombre: <br\\>'+ordenafraccionar.descripcion+'<br\\>Observacion: '+ordenafraccionar.observacion,\r\n    inputs: [\r\n\r\n\r\n      {\r\n        name: 'codigoingresadoenalerta',\r\n        type: 'password',\r\n        placeholder: 'Codigo de Carrete/Chipa',\r\n        cssClass: 'specialClass',\r\n        attributes: {\r\n          maxlength: 9,\r\n          inputmode: 'decimal',\r\n          value:this.codigoingresadoporusuarioparaverificarqueseaelcarrete\r\n        },\r\n      },\r\n    ],\r\n    buttons: [\r\n      {\r\n        text: 'Cancelar',\r\n        role: 'cancel',\r\n        cssClass: 'secondary',\r\n        handler: () => {\r\n          console.log('Confirm Cancel');\r\n\r\n        },\r\n      },\r\n      {\r\n        text: 'Verificar',\r\n        handler: async (alertData) => {\r\n          console.log('Confirm Ok');\r\n          console.log(alertData.codigoingresadoenalerta);\r\n          if(alertData.codigoingresadoenalerta==ordenafraccionar.numero_fraccionado){\r\n\r\n            console.log('Confirmado el codigo es el mismo');\r\n\r\n            const codigoscoinciden = await this.loadingController.create({\r\n              message: 'Verificación exitosa, Fraccionando.',spinner: 'bubbles',duration: 1000,\r\n              });\r\n              codigoscoinciden.present();\r\n              this.faccionar(ordenafraccionar);\r\n          }\r\n          else{\r\n            const incorrecto = await this.loadingController.create({\r\n              message: 'Carrete Incorrecto',spinner: 'bubbles',duration: 800,\r\n              });\r\n              this.presentAlertPrompt(ordenafraccionar);\r\n              incorrecto.present();\r\n\r\n          }\r\n\r\n        },\r\n      },\r\n    ],\r\n  });\r\n\r\n  await alert.present();\r\n}\r\n\r\n\r\nasync faccionar(ordenafraccionar){\r\n  this.nuevafecha = new Date ();\r\n  let fecha_fraccionado =this.datepipe.transform(this.nuevafecha, 'yyyy-MM-dd');\r\n  let hora_fraccionado =this.datepipe.transform(this.nuevafecha, 'hh:mm');\r\n\r\n  this.user_nombre=this.globalpermisos.nombre;\r\n  this.user_id=this.globalpermisos.id_usuario;\r\n\r\n    var datafraccionarordenfraccionamiento = {\r\n      nombre_solicitud:'fraccionarordenfraccionamiento',\r\n      id_inutilizado:ordenafraccionar.id_inutilizado,\r\n      operario_fraccionado:this.user_nombre,\r\n      fecha_fraccionado:fecha_fraccionado,\r\n      hora_fraccionado:hora_fraccionado,\r\n      estado:'fraccionado'\r\n\r\n      }\r\n      this.json.variasfunciones(datafraccionarordenfraccionamiento).subscribe(async (res: any ) =>{\r\n        console.log('respuesta a la solicitud variasfunciones,  fraccionarordenfraccionamiento', res);\r\n        this.respuestafraccionarordenfraccionamiento=res;\r\n        if(this.respuestafraccionarordenfraccionamiento>0) {\r\n          var dataobtenerfraccionamientodespuesdefraccionar = {\r\n            nombre_solicitud:'obtenerfraccionamientodespuesdefraccionar',\r\n            id_inutilizado:ordenafraccionar.id_inutilizado,\r\n            }\r\n            this.json.variasfunciones(dataobtenerfraccionamientodespuesdefraccionar).subscribe(async (res: any ) =>{\r\n              this.ordencreadaporeloperario=res[0];\r\n\r\n                //empieza el modal\r\n                const modal = await this.modalController.create({\r\n                  component: ModalfraccionamientoqrPage,\r\n                  componentProps: {\r\n                    cssClass: 'my-custom-class',\r\n                    'dataparaelmodal': this.ordencreadaporeloperario,\r\n                  }\r\n                });\r\n                \r\n                modal.onDidDismiss().then((data) => {\r\n                  this.actualizarlista();\r\n                });\r\n                console.log('enviando estos datos al modal qr',this.ordencreadaporeloperario);\r\n                return await modal.present();\r\n                //termina el modal\r\n\r\n\r\n            });   //cierre reconsultar fraccionamiento que se guardo con un operario.\r\n\r\n          }  //cierre condicional if\r\n\r\n        }); //cierre envio fraccionamiento\r\n\r\n}\r\n\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmcmFjY2lvbmFtaWVudG8ucGFnZS5zY3NzIn0= */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Fraccionamiento</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button href=\\\"https://cables.cameleco.com/ayuda-fraccionamiento/\\\" target=\\\"_blank\\\" style=\\\"text-transform: none; margin-right: 15px;\\\">Ayuda \\r\\n          <ion-icon  name=\\\"information-circle-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n  </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-grid *ngIf=\\\"this.seccionactiva=='no'\\\">\\r\\n    <ion-row class=\\\"ion-align-items-center\\\">\\r\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n        <ion-text  (click)=\\\"reingresar()\\\" color=\\\"danger\\\" >Sección expirada debe reingresar.</ion-text>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  <ion-row class=\\\"ion-align-items-center\\\">\\r\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n      <ion-button  (click)=\\\"reingresar()\\\" color=\\\"danger\\\" ><ion-text style=\\\"font-weight: 500;\\\">REINGRESAR</ion-text>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-grid *ngIf=\\\"this.puedenavegaraqui=='no'\\\">\\r\\n    <ion-row class=\\\"ion-align-items-center\\\">\\r\\n      <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\r\\n        <ion-text color=\\\"danger\\\" >No tiene permisos para navegar en esta sección.</ion-text>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n\\r\\n\\r\\n  <ion-grid *ngIf=\\\"this.puedenavegaraqui=='si'\\\">\\r\\n\\r\\n\\r\\n      <ion-card>\\r\\n        <ion-card-header>\\r\\n          <ion-card-title style=\\\"text-align: center;\\\">\\r\\n            <ion-text color=\\\"danger\\\" >Ejecutar orden de fraccionamiento.</ion-text><br>\\r\\n          </ion-card-title>\\r\\n        </ion-card-header>\\r\\n        <ion-card-content>\\r\\n          <ion-card-subtitle style=\\\"text-align: center;\\\">\\r\\n          <ion-text color=\\\"danger\\\" >Pendientes por fraccionar:</ion-text>\\r\\n        </ion-card-subtitle>\\r\\n        </ion-card-content>\\r\\n       </ion-card>\\r\\n\\r\\n    \\r\\n        <ion-row style=\\\"border-radius: 5px;\\\" class=\\\"ion-align-items-center\\\">\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n               <ion-text style=\\\"font-size:9px;\\\" color=\\\"danger\\\" ><strong>Referencia</strong></ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n               <ion-text style=\\\"font-size:9px;\\\" color=\\\"danger\\\" ><strong>Codigo</strong></ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\">\\r\\n               <ion-text style=\\\"font-size:9px;\\\" color=\\\"danger\\\" ><strong>Nombre</strong></ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n                <ion-text style=\\\"font-size:9px;\\\" color=\\\"danger\\\" ><strong>Documento<br>de Referencia</strong></ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n                <ion-text style=\\\"font-size:9px;\\\" color=\\\"danger\\\" ><strong>metros de<br>fraccionamiento</strong></ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n                <ion-text style=\\\"font-size:9px;\\\" color=\\\"danger\\\" ><strong>Observaciones</strong></ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n                <ion-text style=\\\"font-size:9px;\\\" color=\\\"danger\\\" ><strong>Accion</strong></ion-text>\\r\\n            </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n\\r\\n      <section *ngFor=\\\"let ordenafraccionar of respuestaobtenerordenesdefraccionamientopendientesynobloqueados\\\">\\r\\n        <ion-row *ngIf=\\\"ordenafraccionar.fraccionado=='tomada'\\\" class=\\\"ion-align-items-center\\\" >\\r\\n          <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n                <ion-text color=\\\"danger\\\" >{{ordenafraccionar.referencia}}</ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n              <ion-text *ngIf=\\\"ordenafraccionar.id_inutilizado>0&&ordenafraccionar.id_inutilizado<10\\\" color=\\\"danger\\\" style=\\\"color:danger\\\">0000000{{ordenafraccionar.id_inutilizado}}</ion-text>\\r\\n              <ion-text *ngIf=\\\"ordenafraccionar.id_inutilizado>10&&ordenafraccionar.id_inutilizado<100\\\" color=\\\"danger\\\" style=\\\"color:danger\\\">000000{{ordenafraccionar.id_inutilizado}}</ion-text>\\r\\n              <ion-text *ngIf=\\\"ordenafraccionar.id_inutilizado>100&&ordenafraccionar.id_inutilizado<1000\\\" color=\\\"danger\\\" style=\\\"color:danger\\\">00000{{ordenafraccionar.id_inutilizado}}</ion-text>\\r\\n              <ion-text *ngIf=\\\"ordenafraccionar.id_inutilizado>1000&&ordenafraccionar.id_inutilizado<10000\\\" color=\\\"danger\\\" style=\\\"color:danger\\\">0000{{ordenafraccionar.id_inutilizado}}</ion-text>\\r\\n              <ion-text *ngIf=\\\"ordenafraccionar.id_inutilizado>10000&&ordenafraccionar.id_inutilizado<100000\\\" color=\\\"danger\\\" style=\\\"color:danger\\\">000{{ordenafraccionar.id_inutilizado}}</ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\">\\r\\n               <ion-text color=\\\"danger\\\" >{{ordenafraccionar.descripcion}}</ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n               <ion-text color=\\\"danger\\\" >{{ordenafraccionar.documento}}</ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n               <ion-text color=\\\"danger\\\" >{{ordenafraccionar.metrosafraccionar}}</ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n               <ion-text color=\\\"danger\\\" >{{ordenafraccionar.observacion}}</ion-text>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n               <ion-button (click)=\\\"presentAlertPrompt(ordenafraccionar)\\\" size=\\\"small\\\" color=\\\"danger\\\">\\r\\n                    <ion-icon style=\\\"color:white;\\\" name=\\\"bag-check-outline\\\"></ion-icon><ion-text style=\\\"font-size: 8px; color:white;\\\">Ejecutar<br>Orden</ion-text>\\r\\n               </ion-button>\\r\\n            </ion-col>\\r\\n        </ion-row>    \\r\\n        </section>\\r\\n\\r\\n\\r\\n\\r\\n    \\r\\n    <section *ngFor=\\\"let ordenafraccionar of respuestaobtenerordenesdefraccionamientopendientesynobloqueados\\\">\\r\\n    <ion-row *ngIf=\\\"ordenafraccionar.fraccionado=='no'\\\" class=\\\"ion-align-items-center\\\" >\\r\\n      <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n            <ion-text color=\\\"danger\\\" >{{ordenafraccionar.referencia}}</ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n          <ion-text *ngIf=\\\"ordenafraccionar.id_inutilizado>0&&ordenafraccionar.id_inutilizado<10\\\" color=\\\"danger\\\" style=\\\"color:danger\\\">0000000{{ordenafraccionar.id_inutilizado}}</ion-text>\\r\\n          <ion-text *ngIf=\\\"ordenafraccionar.id_inutilizado>10&&ordenafraccionar.id_inutilizado<100\\\" color=\\\"danger\\\" style=\\\"color:danger\\\">000000{{ordenafraccionar.id_inutilizado}}</ion-text>\\r\\n          <ion-text *ngIf=\\\"ordenafraccionar.id_inutilizado>100&&ordenafraccionar.id_inutilizado<1000\\\" color=\\\"danger\\\" style=\\\"color:danger\\\">00000{{ordenafraccionar.id_inutilizado}}</ion-text>\\r\\n          <ion-text *ngIf=\\\"ordenafraccionar.id_inutilizado>1000&&ordenafraccionar.id_inutilizado<10000\\\" color=\\\"danger\\\" style=\\\"color:danger\\\">0000{{ordenafraccionar.id_inutilizado}}</ion-text>\\r\\n          <ion-text *ngIf=\\\"ordenafraccionar.id_inutilizado>10000&&ordenafraccionar.id_inutilizado<100000\\\" color=\\\"danger\\\" style=\\\"color:danger\\\">000{{ordenafraccionar.id_inutilizado}}</ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\" class=\\\"ion-text-center\\\">\\r\\n           <ion-text color=\\\"danger\\\" >{{ordenafraccionar.descripcion}}</ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n           <ion-text color=\\\"danger\\\" >{{ordenafraccionar.documento}}</ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n           <ion-text color=\\\"danger\\\" >{{ordenafraccionar.metrosafraccionar}}</ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n           <ion-text color=\\\"danger\\\" >{{ordenafraccionar.observacion}}</ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"1.5\\\" class=\\\"ion-text-center\\\">\\r\\n           <ion-button (click)=\\\"ordenar(ordenafraccionar)\\\" size=\\\"small\\\" color=\\\"danger\\\">\\r\\n                <ion-icon style=\\\"color:white;\\\" name=\\\"id-card-outline\\\"></ion-icon><ion-text style=\\\"font-size: 8px; color:white;\\\">Ordenar</ion-text>\\r\\n           </ion-button>\\r\\n        </ion-col>\\r\\n    </ion-row>    \\r\\n    </section>\\r\\n    \\r\\n    \\r\\n    \\r\\n    \\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n  \\r\\n</ion-content>\\r\\n\";"],"sourceRoot":"webpack:///"}